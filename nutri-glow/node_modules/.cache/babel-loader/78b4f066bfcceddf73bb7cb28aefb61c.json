{"ast":null,"code":"var _jsxFileName = \"/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\nconst APP_ID = '143e5a61';\nconst APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\nconst exampleReq = `https://api.edamam.com/api/recipes/v2?type=public&q=egg&app_id=${APP_ID}&app_key=${APP_KEY}&diet=high-fiber&health=vegan&health=vegetarian&cuisineType=Asian&mealType=Lunch`;\nexport default function Recipes() {\n  _s();\n\n  const [dietLabel, setDietLabel] = useState('');\n  const [mealType, setMealType] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [dietType, setDietType] = useState('');\n\n  function getDietLabel(label) {\n    setDietLabel(label);\n  }\n\n  function getMealType(type) {\n    setMealType(type);\n  }\n\n  function getCuisine(cuisine) {\n    setCuisine(cuisine);\n  }\n\n  function getHealthLabel(health) {\n    setHealthLabel(health);\n  }\n\n  function getDietType(diet) {\n    setDietType(diet);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Recipes\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: MealType.map((type, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: type,\n        value: type,\n        getValue: getMealType\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DietLabel.map((label, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: label,\n        value: label,\n        getValue: getDietLabel\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DietType.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: diet,\n        value: diet,\n        getValue: getDietType\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CuisineDropdown, {\n      handleChange: getCuisine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeDropdown, {\n      handleChange: getHealthLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"BzDvr9RA0g8oKGuhVO0E/gKlpCY=\");\n\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js"],"names":["React","useState","CuisineDropdown","RecipeDropdown","RecipeFormButton","MealType","DietLabel","DietType","APP_ID","APP_KEY","exampleReq","Recipes","dietLabel","setDietLabel","mealType","setMealType","cuisine","setCuisine","healthLabel","setHealthLabel","dietType","setDietType","getDietLabel","label","getMealType","type","getCuisine","getHealthLabel","health","getDietType","diet","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\n\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = [\n  'balanced',\n  'high-fiber',\n  'high-protein',\n  'low-carb',\n  'low-fat',\n  'low-sodium',\n];\n\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\n\nconst APP_ID = '143e5a61';\nconst APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\n\nconst exampleReq = `https://api.edamam.com/api/recipes/v2?type=public&q=egg&app_id=${APP_ID}&app_key=${APP_KEY}&diet=high-fiber&health=vegan&health=vegetarian&cuisineType=Asian&mealType=Lunch`;\n\nexport default function Recipes() {\n  const [dietLabel, setDietLabel] = useState('');\n  const [mealType, setMealType] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [dietType, setDietType] = useState('');\n\n  function getDietLabel(label) {\n    setDietLabel(label);\n  }\n  function getMealType(type) {\n    setMealType(type);\n  }\n\n  function getCuisine(cuisine) {\n    setCuisine(cuisine);\n  }\n\n  function getHealthLabel(health) {\n    setHealthLabel(health);\n  }\n  function getDietType(diet) {\n    setDietType(diet);\n  }\n\n  return (\n    <div>\n      Recipes\n      <div>\n        {MealType.map((type, index) => (\n          <RecipeFormButton\n            text={type}\n            value={type}\n            getValue={getMealType}\n            key={index}\n          />\n        ))}\n      </div>\n      <div>\n        {DietLabel.map((label, index) => (\n          <RecipeFormButton\n            text={label}\n            value={label}\n            getValue={getDietLabel}\n            key={index}\n          />\n        ))}\n      </div>\n      <div>\n        {DietType.map((diet, index) => (\n          <RecipeFormButton\n            text={diet}\n            value={diet}\n            getValue={getDietType}\n            key={index}\n          />\n        ))}\n      </div>\n      <CuisineDropdown handleChange={getCuisine} />\n      <RecipeDropdown handleChange={getHealthLabel} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}