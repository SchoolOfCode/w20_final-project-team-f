{"ast":null,"code":"var _jsxFileName = \"/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\nexport default function Recipes() {\n  _s();\n\n  //state that stores user selection from recipe filters\n  const [dietLabel, setDietLabel] = useState('');\n  const [mealType, setMealType] = useState('');\n  const [cuisines, setCuisines] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [dietType, setDietType] = useState('');\n\n  function getDietLabel(label) {\n    setDietLabel(label);\n  }\n\n  console.log(dietType);\n\n  function getMealType(meal) {\n    setMealType(meal);\n  }\n\n  function getCuisine(cuisine) {\n    setCuisines(cuisine);\n  }\n\n  function getHealthLabel(health) {\n    setHealthLabel(health);\n  }\n\n  function getDietType(type) {\n    setDietType(type);\n  }\n\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22'; // state that holds the recipes fetched data\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(''); //submit selection after clicking the button\n\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    getRecipes(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query, dietLabel, mealType, cuisines, healthLabel, dietType]); // async function to get API data\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${dietLabel}&health=${healthLabel}&health=${dietType}&cuisineType=${cuisines}&mealType=${mealType}` // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&&from=0&to=6`\n    );\n    const recipeData = await response.json(); // all data is saved in the state\n\n    setRecipes(recipeData.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Discover healthy recipes at just one click away\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeFilters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchRecipes\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: getSearch,\n              className: \"searchForm\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"searchBar\",\n                type: \"text\",\n                placeholder: \"type ingredient\",\n                value: search,\n                onChange: updateSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"searchButton\",\n                type: \"submit\",\n                children: \"Get recipes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectMeal\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select Meal Type: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), MealType.map((type, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n              text: type,\n              value: type,\n              getValue: setMealType\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectLabel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select Diet Label: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), DietLabel.map((label, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n              text: label,\n              value: label,\n              getValue: setDietLabel\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectDiet\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select Diet type: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), DietType.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n              text: diet,\n              value: diet,\n              getValue: setDietType\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectDropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select food intolerance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RecipeDropdown, {\n            handleChange: setHealthLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select your favourite cuisine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CuisineDropdown, {\n            handleChange: setCuisines\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        title: recipe.recipe.label,\n        calories: recipe.recipe.calories.toFixed(),\n        image: recipe.recipe.image,\n        ingredients: recipe.recipe.ingredients,\n        url: recipe.recipe.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"VPfPizlpuwMSkitUgwAzW0lpQo8=\");\n\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js"],"names":["React","useState","useEffect","CuisineDropdown","RecipeDropdown","RecipeFormButton","RecipeCard","MealType","DietLabel","DietType","Recipes","dietLabel","setDietLabel","mealType","setMealType","cuisines","setCuisines","healthLabel","setHealthLabel","dietType","setDietType","getDietLabel","label","console","log","getMealType","meal","getCuisine","cuisine","getHealthLabel","health","getDietType","type","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","recipeData","json","hits","updateSearch","e","target","value","getSearch","preventDefault","map","index","diet","recipe","calories","toFixed","image","ingredients","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\n\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = [\n  'balanced',\n  'high-fiber',\n  'high-protein',\n  'low-carb',\n  'low-fat',\n  'low-sodium',\n];\n\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\n\nexport default function Recipes() {\n  //state that stores user selection from recipe filters\n  const [dietLabel, setDietLabel] = useState('');\n  const [mealType, setMealType] = useState('');\n  const [cuisines, setCuisines] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [dietType, setDietType] = useState('');\n\n  function getDietLabel(label) {\n    setDietLabel(label);\n  }\n  console.log(dietType);\n  function getMealType(meal) {\n    setMealType(meal);\n  }\n\n  function getCuisine(cuisine) {\n    setCuisines(cuisine);\n  }\n\n  function getHealthLabel(health) {\n    setHealthLabel(health);\n  }\n  function getDietType(type) {\n    setDietType(type);\n  }\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\n\n  // state that holds the recipes fetched data\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  //submit selection after clicking the button\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query, dietLabel, mealType, cuisines, healthLabel, dietType]);\n\n  // async function to get API data\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${dietLabel}&health=${healthLabel}&health=${dietType}&cuisineType=${cuisines}&mealType=${mealType}`\n      // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&&from=0&to=6`\n    );\n\n    const recipeData = await response.json();\n    // all data is saved in the state\n    setRecipes(recipeData.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n  return (\n    <div className=\"wrapper\">\n      <h1>Recipe finder</h1>\n      <h2>Discover healthy recipes at just one click away</h2>\n      <div className=\"top\">\n        <div className=\"recipeFilters\">\n          <div className=\"selection\">\n            <div className=\"searchRecipes\">\n              <form onSubmit={getSearch} className=\"searchForm\">\n                <input\n                  className=\"searchBar\"\n                  type=\"text\"\n                  placeholder=\"type ingredient\"\n                  value={search}\n                  onChange={updateSearch}\n                ></input>\n                <button className=\"searchButton\" type=\"submit\">\n                  Get recipes\n                </button>\n              </form>\n            </div>\n            <div className=\"selectMeal\">\n              <h3>Select Meal Type: </h3>\n              {MealType.map((type, index) => (\n                <RecipeFormButton\n                  text={type}\n                  value={type}\n                  getValue={setMealType}\n                  key={index}\n                />\n              ))}\n            </div>\n            <div className=\"selectLabel\">\n              <h3>Select Diet Label: </h3>\n              {DietLabel.map((label, index) => (\n                <RecipeFormButton\n                  text={label}\n                  value={label}\n                  getValue={setDietLabel}\n                  key={index}\n                />\n              ))}\n            </div>\n            <div className=\"selectDiet\">\n              <h3>Select Diet type: </h3>\n              {DietType.map((diet, index) => (\n                <RecipeFormButton\n                  text={diet}\n                  value={diet}\n                  getValue={setDietType}\n                  key={index}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"selectDropdown\">\n            <h3>Select food intolerance</h3>\n            <RecipeDropdown handleChange={setHealthLabel} />\n            <h3>Select your favourite cuisine</h3>\n            <CuisineDropdown handleChange={setCuisines} />\n          </div>\n        </div>\n      </div>\n      {/* //map over the recipes generated */}\n      <div className=\"bottom\">\n        {recipes.map((recipe) => (\n          <RecipeCard\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories.toFixed()}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            url={recipe.recipe.url}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}