{"ast":null,"code":"var _jsxFileName = \"/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\n\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton'; // import CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\n\nimport './Recipes.scss';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\nexport default function Recipes() {\n  _s();\n\n  // state that stores user selection from recipe filters\n  const [dietLabel, setDietLabel] = useState('');\n  const [mealType, setMealType] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [dietType, setDietType] = useState('');\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22'; // state that holds the recipes fetched data\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(''); //submit selection after clicking the button\n\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    getRecipes();\n  }, []); // async function to get API data\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${dietLabel}&health=${healthLabel}&health=${dietType}&cuisineType=${cuisine}&mealType=${mealType}` // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const recipeData = await response.json(); // all data is saved in the state\n\n    setRecipes(recipeData.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  function getDietLabel(name) {\n    setDietLabel(name);\n  }\n\n  function getMealType(name) {\n    setMealType(name);\n  }\n\n  function getCuisine(name) {\n    setCuisine(name);\n  }\n\n  function getHealthLabel(name) {\n    setHealthLabel(name);\n  }\n\n  function getDietType(name) {\n    setDietType(name);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Recipes\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getSearch,\n        className: \"searchForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchBar\",\n          type: \"text\",\n          placeholder: \"type ingredient\",\n          value: search,\n          onChange: updateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"submit\",\n          children: \"Get recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: MealType.map((type, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: type,\n        value: type,\n        getValue: getMealType\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DietLabel.map((label, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: label,\n        value: label,\n        getValue: getDietLabel\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DietType.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: diet,\n        value: diet,\n        getValue: props.updateDietType\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories.toFixed(),\n      image: recipe.recipe.image,\n      ingredients: recipe.recipe.ingredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"f6RmpfJzk27RMUI4lcj+K6aRPno=\");\n\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js"],"names":["React","useEffect","useState","RecipeFormButton","RecipeCard","MealType","DietLabel","DietType","Recipes","dietLabel","setDietLabel","mealType","setMealType","cuisine","setCuisine","healthLabel","setHealthLabel","dietType","setDietType","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","recipeData","json","hits","updateSearch","e","target","value","getSearch","preventDefault","getDietLabel","name","getMealType","getCuisine","getHealthLabel","getDietType","map","type","index","label","diet","props","updateDietType","recipe","calories","toFixed","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\n// import CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport './Recipes.scss';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\n\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = [\n  'balanced',\n  'high-fiber',\n  'high-protein',\n  'low-carb',\n  'low-fat',\n  'low-sodium',\n];\n\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\n\nexport default function Recipes() {\n  // state that stores user selection from recipe filters\n  const [dietLabel, setDietLabel] = useState('');\n  const [mealType, setMealType] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [dietType, setDietType] = useState('');\n\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\n\n  // state that holds the recipes fetched data\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  //submit selection after clicking the button\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  // async function to get API data\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${dietLabel}&health=${healthLabel}&health=${dietType}&cuisineType=${cuisine}&mealType=${mealType}`\n      // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n\n    const recipeData = await response.json();\n    // all data is saved in the state\n    setRecipes(recipeData.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  function getDietLabel(name) {\n    setDietLabel(name);\n  }\n  function getMealType(name) {\n    setMealType(name);\n  }\n\n  function getCuisine(name) {\n    setCuisine(name);\n  }\n\n  function getHealthLabel(name) {\n    setHealthLabel(name);\n  }\n  function getDietType(name) {\n    setDietType(name);\n  }\n\n  return (\n    <div>\n      Recipes\n      <div>\n        <form onSubmit={getSearch} className=\"searchForm\">\n          <input\n            className=\"searchBar\"\n            type=\"text\"\n            placeholder=\"type ingredient\"\n            value={search}\n            onChange={updateSearch}\n          ></input>\n          <button className=\"searchButton\" type=\"submit\">\n            Get recipes\n          </button>\n        </form>\n      </div>\n      <div>\n        {MealType.map((type, index) => (\n          <RecipeFormButton\n            text={type}\n            value={type}\n            getValue={getMealType}\n            key={index}\n          />\n        ))}\n      </div>\n      <div>\n        {DietLabel.map((label, index) => (\n          <RecipeFormButton\n            text={label}\n            value={label}\n            getValue={getDietLabel}\n            key={index}\n          />\n        ))}\n      </div>\n      <div>\n        {DietType.map((diet, index) => (\n          <RecipeFormButton\n            text={diet}\n            value={diet}\n            getValue={props.updateDietType}\n            key={index}\n          />\n        ))}\n      </div>\n      {/* <div>\n        <RecipeDropdown handleChange={props.updateHealthLabel} />\n      </div>\n      <div>\n        <CuisineDropdown handleChange={props.updateCuisine} />\n      </div> */}\n      {/* //map over the recipes generated */}\n      {recipes.map((recipe) => (\n        <RecipeCard\n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories.toFixed()}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}