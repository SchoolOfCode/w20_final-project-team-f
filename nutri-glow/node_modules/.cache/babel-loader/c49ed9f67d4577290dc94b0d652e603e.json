{"ast":null,"code":"var _jsxFileName = \"/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\nexport default function Recipes(props) {\n  _s();\n\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22'; // state that holds the recipes fetched data\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(''); //submit selection after clicking the button\n\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    getRecipes(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]); // async function to get API data\n\n  const getRecipes = async () => {\n    const response = await fetch( // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${props.label}&health=${props.health}&health=${props.type}&cuisineType=${props.cuisines}&mealType=${props.meal}`\n    `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&&from=0&to=6`);\n    const recipeData = await response.json(); // all data is saved in the state\n\n    setRecipes(recipeData.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Discover healthy recipes at just one click away\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchRecipe\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: getSearch,\n          className: \"searchForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchBar\",\n            type: \"text\",\n            placeholder: \"type ingredient\",\n            value: search,\n            onChange: updateSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchButton\",\n            type: \"submit\",\n            children: \"Get recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Meal Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectMeal\",\n        children: MealType.map((type, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n          text: type,\n          value: type,\n          getValue: props.updateMealType\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectLabel\",\n        children: DietLabel.map((label, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n          text: label,\n          value: label,\n          getValue: props.updateDietLabel\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Diet type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectDiet\",\n        children: DietType.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n          text: diet,\n          value: diet,\n          getValue: props.updateDietType\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectDropdown\",\n        children: [/*#__PURE__*/_jsxDEV(RecipeDropdown, {\n          handleChange: props.updateHealthLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CuisineDropdown, {\n          handleChange: props.updateCuisine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        title: recipe.recipe.label,\n        calories: recipe.recipe.calories.toFixed(),\n        image: recipe.recipe.image,\n        ingredients: recipe.recipe.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"CIiL6VVQqR7BFDfhtc6B2fy4T1M=\");\n\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js"],"names":["React","useState","useEffect","CuisineDropdown","RecipeDropdown","RecipeFormButton","RecipeCard","MealType","DietLabel","DietType","Recipes","props","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","recipeData","json","hits","updateSearch","e","target","value","getSearch","preventDefault","map","type","index","updateMealType","label","updateDietLabel","diet","updateDietType","updateHealthLabel","updateCuisine","recipe","calories","toFixed","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CuisineDropdown from '../components/CuisineDropdown/CuisineDropdown';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\n\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = [\n  'balanced',\n  'high-fiber',\n  'high-protein',\n  'low-carb',\n  'low-fat',\n  'low-sodium',\n];\n\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\n\nexport default function Recipes(props) {\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\n\n  // state that holds the recipes fetched data\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  //submit selection after clicking the button\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  // async function to get API data\n  const getRecipes = async () => {\n    const response = await fetch(\n      // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${props.label}&health=${props.health}&health=${props.type}&cuisineType=${props.cuisines}&mealType=${props.meal}`\n      `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&&from=0&to=6`\n    );\n\n    const recipeData = await response.json();\n    // all data is saved in the state\n    setRecipes(recipeData.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n  return (\n    <div className=\"wrapper\">\n      <h1>Recipe finder</h1>\n      <h2>Discover healthy recipes at just one click away</h2>\n      <div className=\"top\">\n        <div className=\"searchRecipe\">\n          <form onSubmit={getSearch} className=\"searchForm\">\n            <input\n              className=\"searchBar\"\n              type=\"text\"\n              placeholder=\"type ingredient\"\n              value={search}\n              onChange={updateSearch}\n            ></input>\n            <button className=\"searchButton\" type=\"submit\">\n              Get recipes\n            </button>\n          </form>\n        </div>\n        <h3>Select Meal Type</h3>\n        <div className=\"selectMeal\">\n          {MealType.map((type, index) => (\n            <RecipeFormButton\n              text={type}\n              value={type}\n              getValue={props.updateMealType}\n              key={index}\n            />\n          ))}\n        </div>\n        <h3>Select Label</h3>\n        <div className=\"selectLabel\">\n          {DietLabel.map((label, index) => (\n            <RecipeFormButton\n              text={label}\n              value={label}\n              getValue={props.updateDietLabel}\n              key={index}\n            />\n          ))}\n        </div>\n        <h3>Select Diet type</h3>\n        <div className=\"selectDiet\">\n          {DietType.map((diet, index) => (\n            <RecipeFormButton\n              text={diet}\n              value={diet}\n              getValue={props.updateDietType}\n              key={index}\n            />\n          ))}\n        </div>\n        <div className=\"selectDropdown\">\n          <RecipeDropdown handleChange={props.updateHealthLabel} />\n          <CuisineDropdown handleChange={props.updateCuisine} />\n        </div>\n      </div>\n      {/* //map over the recipes generated */}\n      <div className=\"bottom\">\n        {recipes.map((recipe) => (\n          <RecipeCard\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories.toFixed()}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}