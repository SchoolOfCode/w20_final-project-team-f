{"ast":null,"code":"var _jsxFileName = \"/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/GeneratedRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GeneratedRecipes(props) {\n  _s();\n\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22'; // state that holds the recipes fetched data\n\n  const [recipes, setRecipes] = useState([]);\n  useEffect(() => {\n    getRecipes();\n  }, []); // async function to get API data\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${props.label}&health=${healthLabel}&health=${dietType}&cuisineType=${cuisines}&mealType=${mealType}` // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const recipeData = await response.json(); // all data is saved in the state\n\n    setRecipes(recipeData.hits);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories.toFixed(),\n      image: recipe.recipe.image,\n      ingredients: recipe.recipe.ingredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GeneratedRecipes, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n\n_c = GeneratedRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneratedRecipes\");","map":{"version":3,"sources":["/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/GeneratedRecipes.js"],"names":["React","useEffect","useState","RecipeCard","GeneratedRecipes","props","APP_ID","APP_KEY","recipes","setRecipes","getRecipes","response","fetch","query","label","healthLabel","dietType","cuisines","mealType","recipeData","json","hits","map","recipe","calories","toFixed","image","ingredients"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB,CAF8C,CAI9C;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CAP8C,CAW9C;;AACA,QAAMA,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uDAAsDC,KAAM,WAAUP,MAAO,YAAWC,OAAQ,SAAQF,KAAK,CAACS,KAAM,WAAUC,WAAY,WAAUC,QAAS,gBAAeC,QAAS,aAAYC,QAAS,EADjL,CAE1B;AAF0B,KAA5B;AAKA,UAAMC,UAAU,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAzB,CAN6B,CAO7B;;AACAX,IAAAA,UAAU,CAACU,UAAU,CAACE,IAAZ,CAAV;AACD,GATD;;AAWA,sBACE;AAAA,cAEGb,OAAO,CAACc,GAAR,CAAaC,MAAD,iBACX,QAAC,UAAD;AACE,MAAA,KAAK,EAAEA,MAAM,CAACA,MAAP,CAAcT,KADvB;AAEE,MAAA,QAAQ,EAAES,MAAM,CAACA,MAAP,CAAcC,QAAd,CAAuBC,OAAvB,EAFZ;AAGE,MAAA,KAAK,EAAEF,MAAM,CAACA,MAAP,CAAcG,KAHvB;AAIE,MAAA,WAAW,EAAEH,MAAM,CAACA,MAAP,CAAcI;AAJ7B;AAAA;AAAA;AAAA;AAAA,YADD;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GApCuBvB,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport RecipeCard from '../components/RecipeCard/RecipeCard';\n\nexport default function GeneratedRecipes(props) {\n  const APP_ID = '143e5a61';\n  const APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\n\n  // state that holds the recipes fetched data\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  // async function to get API data\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&diet=${props.label}&health=${healthLabel}&health=${dietType}&cuisineType=${cuisines}&mealType=${mealType}`\n      // `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n\n    const recipeData = await response.json();\n    // all data is saved in the state\n    setRecipes(recipeData.hits);\n  };\n\n  return (\n    <div>\n      {/* //map over the recipes generated */}\n      {recipes.map((recipe) => (\n        <RecipeCard\n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories.toFixed()}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}