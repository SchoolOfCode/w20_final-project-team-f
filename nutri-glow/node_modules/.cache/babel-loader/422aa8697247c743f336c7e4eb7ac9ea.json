{"ast":null,"code":"var _jsxFileName = \"/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js\";\nimport React from 'react';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\nconst APP_ID = '143e5a61';\nconst APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\nconst exampleReq = 'https://api.edamam.com/api/recipes/v2?type=public&q=egg&app_id=143e5a61&app_key=1aba1110ee2c42dcaaeccce62c1f3e22&diet=high-fiber&health=vegan&health=vegetarian&cuisineType=Asian&mealType=Lunch';\nexport default function Recipes() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Recipes\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: MealType.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: diet,\n        value: diet // getValue={props.updateDiet}\n\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DietLabel.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: diet,\n        value: diet // getValue={props.updateDiet}\n\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DietType.map((diet, index) => /*#__PURE__*/_jsxDEV(RecipeFormButton, {\n        text: diet,\n        value: diet // getValue={props.updateDiet}\n\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeDropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/Users/alinasavin/Documents/school-of-code/w20_final-project-team-f/nutri-glow/src/pages/Recipes.js"],"names":["React","RecipeDropdown","RecipeFormButton","MealType","DietLabel","DietType","APP_ID","APP_KEY","exampleReq","Recipes","map","diet","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,OAAO,gBAAP;;AAEA,IAAIC,QAAQ,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,EAAiC,OAAjC,CAAf;AACA,IAAIC,SAAS,GAAG,CACd,UADc,EAEd,YAFc,EAGd,cAHc,EAId,UAJc,EAKd,SALc,EAMd,YANc,CAAhB;AASA,IAAIC,QAAQ,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,aAAxB,EAAuC,OAAvC,EAAgD,QAAhD,CAAf;AAEA,MAAMC,MAAM,GAAG,UAAf;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,MAAMC,UAAU,GACd,kMADF;AAGA,eAAe,SAASC,OAAT,GAAmB;AAChC,sBACE;AAAA,uCAEE;AAAA,gBACGN,QAAQ,CAACO,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,gBAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,KAAK,EAAEA,IAFT,CAGE;;AAHF,SAIOC,KAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAA,gBACGR,SAAS,CAACM,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACb,QAAC,gBAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,KAAK,EAAEA,IAFT,CAGE;;AAHF,SAIOC,KAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF,eAsBE;AAAA,gBACGP,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,gBAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,KAAK,EAAEA,IAFT,CAGE;;AAHF,SAIOC,KAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAtBF,eAgCE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;KArCuBH,O","sourcesContent":["import React from 'react';\nimport RecipeDropdown from '../components/RecipeDropdown/RecipeDropdown';\nimport RecipeFormButton from '../components/RecipeFormButton/RecipeFormButton';\nimport './Recipes.scss';\n\nlet MealType = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\nlet DietLabel = [\n  'balanced',\n  'high-fiber',\n  'high-protein',\n  'low-carb',\n  'low-fat',\n  'low-sodium',\n];\n\nlet DietType = ['vegan', 'vegetarian', 'pescatarian', 'paleo', 'kosher'];\n\nconst APP_ID = '143e5a61';\nconst APP_KEY = '1aba1110ee2c42dcaaeccce62c1f3e22';\n\nconst exampleReq =\n  'https://api.edamam.com/api/recipes/v2?type=public&q=egg&app_id=143e5a61&app_key=1aba1110ee2c42dcaaeccce62c1f3e22&diet=high-fiber&health=vegan&health=vegetarian&cuisineType=Asian&mealType=Lunch';\n\nexport default function Recipes() {\n  return (\n    <div>\n      Recipes\n      <div>\n        {MealType.map((diet, index) => (\n          <RecipeFormButton\n            text={diet}\n            value={diet}\n            // getValue={props.updateDiet}\n            key={index}\n          />\n        ))}\n      </div>\n      <div>\n        {DietLabel.map((diet, index) => (\n          <RecipeFormButton\n            text={diet}\n            value={diet}\n            // getValue={props.updateDiet}\n            key={index}\n          />\n        ))}\n      </div>\n      <div>\n        {DietType.map((diet, index) => (\n          <RecipeFormButton\n            text={diet}\n            value={diet}\n            // getValue={props.updateDiet}\n            key={index}\n          />\n        ))}\n      </div>\n      <RecipeDropdown />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}